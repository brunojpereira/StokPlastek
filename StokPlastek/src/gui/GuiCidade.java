/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bean.CidadeBean;
import controller.CidadeController;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 12121001933
 */
public class GuiCidade extends javax.swing.JFrame {
    String modo="pesquisa";
    ResultSet rsPesquisa=null;
    private List<CidadeBean> listaCidades =  new LinkedList<>();
    CidadeController cidadeController = new CidadeController();
    private DefaultTableModel modelo;
    
    /**
     * Creates new form cidadeGui
     */
    public GuiCidade(){
        initComponents();
        setLocationRelativeTo(null);
        defineModeloTabela();
        preencherTabelaCidade(txtPesquisa.getText());
        pangCidade.setEnabledAt(1,false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pangCidade = new javax.swing.JTabbedPane();
        panConsulta = new javax.swing.JPanel();
        panTabela = new javax.swing.JScrollPane();
        tblCidade = new javax.swing.JTable();
        lblPesquisa = new javax.swing.JLabel();
        txtPesquisa = new javax.swing.JTextField();
        botNovo = new javax.swing.JButton();
        botEditar = new javax.swing.JButton();
        botExcluir = new javax.swing.JButton();
        panCadastro = new javax.swing.JPanel();
        lblNomeCargo = new javax.swing.JLabel();
        lblDescCargo = new javax.swing.JLabel();
        lblIdCargo = new javax.swing.JLabel();
        txtidcidade = new javax.swing.JTextField();
        txtNomeCidade = new javax.swing.JTextField();
        botSalvar = new javax.swing.JButton();
        botLimpar = new javax.swing.JButton();
        botCancelar = new javax.swing.JButton();
        cmbUFCidade = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pangCidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        panTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panTabelaMouseClicked(evt);
            }
        });
        panTabela.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                panTabelaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                panTabelaFocusLost(evt);
            }
        });

        tblCidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblCidade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblCidade.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        panTabela.setViewportView(tblCidade);

        lblPesquisa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPesquisa.setText("Pesquisar:");

        txtPesquisa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaActionPerformed(evt);
            }
        });
        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyTyped(evt);
            }
        });

        botNovo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Novo.png"))); // NOI18N
        botNovo.setText("Novo");
        botNovo.setIconTextGap(15);
        botNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botNovoActionPerformed(evt);
            }
        });

        botEditar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Editar.png"))); // NOI18N
        botEditar.setText("Editar");
        botEditar.setIconTextGap(15);
        botEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botEditarActionPerformed(evt);
            }
        });

        botExcluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Excluir.png"))); // NOI18N
        botExcluir.setText("Excluir");
        botExcluir.setIconTextGap(15);
        botExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panConsultaLayout = new javax.swing.GroupLayout(panConsulta);
        panConsulta.setLayout(panConsultaLayout);
        panConsultaLayout.setHorizontalGroup(
            panConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(panConsultaLayout.createSequentialGroup()
                        .addComponent(lblPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPesquisa))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panConsultaLayout.createSequentialGroup()
                        .addComponent(botNovo)
                        .addGap(26, 26, 26)
                        .addComponent(botEditar)
                        .addGap(27, 27, 27)
                        .addComponent(botExcluir)))
                .addContainerGap())
        );
        panConsultaLayout.setVerticalGroup(
            panConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panConsultaLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPesquisa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pangCidade.addTab("Cidades", panConsulta);

        lblNomeCargo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNomeCargo.setText("Nome:");

        lblDescCargo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDescCargo.setText("UF:");

        lblIdCargo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblIdCargo.setText("CÃ³digo:");

        txtidcidade.setEditable(false);
        txtidcidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtidcidade.setEnabled(false);

        txtNomeCidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNomeCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeCidadeActionPerformed(evt);
            }
        });

        botSalvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Salvar.png"))); // NOI18N
        botSalvar.setText("Salvar");
        botSalvar.setIconTextGap(10);
        botSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botSalvarActionPerformed(evt);
            }
        });

        botLimpar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Limpar.png"))); // NOI18N
        botLimpar.setText("Limpar");
        botLimpar.setIconTextGap(10);
        botLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botLimparActionPerformed(evt);
            }
        });

        botCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        botCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Cancelar.png"))); // NOI18N
        botCancelar.setText("Cancelar");
        botCancelar.setIconTextGap(5);
        botCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botCancelarActionPerformed(evt);
            }
        });

        cmbUFCidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PN", "PE", "PI", "RJ", "RN", "RO", "RR", "RS", "SC", "SP", "SE", "TO" }));
        cmbUFCidade.setSelectedItem("Selecione...");

        javax.swing.GroupLayout panCadastroLayout = new javax.swing.GroupLayout(panCadastro);
        panCadastro.setLayout(panCadastroLayout);
        panCadastroLayout.setHorizontalGroup(
            panCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panCadastroLayout.createSequentialGroup()
                        .addComponent(botSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(11, Short.MAX_VALUE))
                    .addGroup(panCadastroLayout.createSequentialGroup()
                        .addGroup(panCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNomeCargo)
                            .addComponent(lblIdCargo))
                        .addGap(34, 34, 34)
                        .addGroup(panCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panCadastroLayout.createSequentialGroup()
                                .addComponent(txtidcidade, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 307, Short.MAX_VALUE))
                            .addGroup(panCadastroLayout.createSequentialGroup()
                                .addComponent(txtNomeCidade)
                                .addContainerGap())))
                    .addGroup(panCadastroLayout.createSequentialGroup()
                        .addComponent(lblDescCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbUFCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panCadastroLayout.setVerticalGroup(
            panCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panCadastroLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdCargo)
                    .addComponent(txtidcidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeCargo)
                    .addComponent(txtNomeCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescCargo)
                    .addComponent(cmbUFCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(panCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botSalvar)
                    .addComponent(botLimpar)
                    .addComponent(botCancelar))
                .addContainerGap())
        );

        pangCidade.addTab("Cadastrar", panCadastro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pangCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pangCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeCidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeCidadeActionPerformed

    private void botCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botCancelarActionPerformed
        String msg="";
        if(modo.equals("novo"))
        msg="Deseja realmente cancelar o novo cadastro?";
        else if(modo.equals("editar"))
        msg="Deseja realmente cancelar a ediÃ§Ã£o?";

        if(JOptionPane.showConfirmDialog(pangCidade,
            msg,"ConfirmaÃ§Ã£o",
            JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                txtidcidade.setText("");
                txtNomeCidade.setText("");
                cmbUFCidade.setSelectedIndex(0);
                pangCidade.setSelectedIndex(0);
                pangCidade.setEnabledAt(1, false);
                modo="pesquisa";
                botNovo.setEnabled(true);
                GuiPrincipal.frmCidade.setClosable(true);
                GuiPrincipal.frmCidade.setIconifiable(true);
                botNovo.setEnabled(true);
                botEditar.setEnabled(true);
                botExcluir.setEnabled(true);
                limparTabela();
                preencherTabelaCidade("");
                pangCidade.setEnabledAt(1,false);
        }
    }//GEN-LAST:event_botCancelarActionPerformed

    private void botLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botLimparActionPerformed
        if(JOptionPane.showConfirmDialog(pangCidade,
            "Deseja realmente limpar todos os dados da tela?","ConfirmaÃ§Ã£o",
            JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
        txtNomeCidade.setText("");
        cmbUFCidade.setSelectedIndex(0);
        }
    }//GEN-LAST:event_botLimparActionPerformed

    private void botSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botSalvarActionPerformed
        try {
            if(txtNomeCidade.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Informe o nome da cidade!");
                txtNomeCidade.requestFocus();
                return;
            }
            if(cmbUFCidade.getSelectedIndex()==0){
                JOptionPane.showMessageDialog(this, "Informe o UF da cidade!");
                cmbUFCidade.requestFocus();
                return;
            }
            if(JOptionPane.showConfirmDialog(pangCidade,
                    "Deseja realmente salvar esta cidade?","ConfirmaÃ§Ã£o",
                    JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                    if(modo.equals("novo"))
                        cidadeController.inserir(txtNomeCidade.getText(), String.valueOf(cmbUFCidade.getSelectedItem()));
                    else
                        cidadeController.alterar(Integer.parseInt(txtidcidade.getText()),txtNomeCidade.getText(), String.valueOf(cmbUFCidade.getSelectedItem()));
                    limparCampos();
                    limparTabela();
                    preencherTabelaCidade("");
                    JOptionPane.showMessageDialog(this, "Cidade salva com sucesso!");
                    pangCidade.setSelectedIndex(0);
                    GuiPrincipal.frmCidade.setClosable(true);
                    GuiPrincipal.frmCidade.setIconifiable(true);
                    botNovo.setEnabled(true);
                    botEditar.setEnabled(true);
                    botExcluir.setEnabled(true);
                    pangCidade.setEnabledAt(1,false);
            
            }
                
        } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(null, 
                "Erro Interno!", "Erro", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
        }
    }//GEN-LAST:event_botSalvarActionPerformed

    private void botNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botNovoActionPerformed
        GuiPrincipal.frmCidade.setClosable(false);
        GuiPrincipal.frmCidade.setIconifiable(false);
        txtidcidade.setText("");
        txtNomeCidade.setText("");
        cmbUFCidade.setSelectedIndex(0);
        pangCidade.setSelectedIndex(0);
        pangCidade.setEnabledAt(1, false);
        pangCidade.setEnabledAt(1, true);
        botNovo.setEnabled(false);
        botEditar.setEnabled(false);
        botExcluir.setEnabled(false);
        pangCidade.setSelectedIndex(1);
        txtNomeCidade.requestFocus();
        modo="novo";
    }//GEN-LAST:event_botNovoActionPerformed

    private void botEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botEditarActionPerformed

        if(tblCidade.getSelectedRow()>=0){
            modo="editar";
            CidadeBean cidade = listaCidades.get(tblCidade.getSelectedRow());
            txtidcidade.setText(String.valueOf(cidade.getIdCidade()));
            txtNomeCidade.setText(cidade.getNomeCidade());
            cmbUFCidade.setSelectedItem(cidade.getUFCidade());
            GuiPrincipal.frmCidade.setClosable(false);
            GuiPrincipal.frmCidade.setIconifiable(false);
            botNovo.setEnabled(false);
            botEditar.setEnabled(false);
            botExcluir.setEnabled(false);
            pangCidade.setEnabledAt(1, true);
            pangCidade.setSelectedIndex(1);
        }else{
            JOptionPane.showMessageDialog(this, "Primeiramente selecione um item para editar!");
            tblCidade.requestFocus();
        }
        
    }//GEN-LAST:event_botEditarActionPerformed

    private void botExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botExcluirActionPerformed
        if(tblCidade.getSelectedRow()>=0){
            if(JOptionPane.showConfirmDialog(pangCidade,
                "Deseja realmente excluir esta cidade?","ConfirmaÃ§Ã£o",
                JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                CidadeBean cidade = listaCidades.get(tblCidade.getSelectedRow());
                try {
                    cidadeController.excluir(cidade.getIdCidade(),cidade.getNomeCidade(),cidade.getUFCidade());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GuiCidade.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(GuiCidade.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(this, "Cidade excluÃ­da com sucesso!");
                limparTabela();
                preencherTabelaCidade("");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Primeiramente selecione um item para excluir!");
            tblCidade.requestFocus();
        }
    }//GEN-LAST:event_botExcluirActionPerformed

    private void txtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaActionPerformed

    private void panTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panTabelaMouseClicked
        botEditar.setEnabled(true);
        botExcluir.setEnabled(true);
    }//GEN-LAST:event_panTabelaMouseClicked

    private void panTabelaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_panTabelaFocusGained
        botEditar.setEnabled(true);
        botExcluir.setEnabled(true);
    }//GEN-LAST:event_panTabelaFocusGained

    private void panTabelaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_panTabelaFocusLost
        botEditar.setEnabled(false);
        botExcluir.setEnabled(false);
    }//GEN-LAST:event_panTabelaFocusLost

    private void txtPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyPressed
        
    }//GEN-LAST:event_txtPesquisaKeyPressed

    private void txtPesquisaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyTyped
        limparTabela();
        preencherTabelaCidade("\"%"+txtPesquisa.getText()+"%\"");
    }//GEN-LAST:event_txtPesquisaKeyTyped

    public void preencherTabelaCidade(String pesquisa){
        listaCidades.removeAll(listaCidades);
        
        try {
            listaCidades = cidadeController.consultar(pesquisa);
            for(CidadeBean cidade : listaCidades){
                String[] linha = new String[3];
                linha[0]=(String.valueOf(cidade.getIdCidade()));
                linha[1]=(cidade.getNomeCidade());
                linha[2]=(cidade.getUFCidade());
                System.out.println(cidade.getNomeCidade());
                modelo.addRow(linha);
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(GuiCidade.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GuiCidade.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }
    
    private void defineModeloTabela(){
        modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tblCidade.setModel(modelo);
        Vector <String> titulo = new Vector<String>();
        titulo.add("CÃ³digo");
        titulo.add("Nome");
        titulo.add("UF");
        
        modelo.setColumnIdentifiers(titulo);
    }
    
    
    /**
     * @param args the command line arguments
     */

    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiCidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiCidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiCidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiCidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiCidade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botCancelar;
    private javax.swing.JButton botEditar;
    private javax.swing.JButton botExcluir;
    private javax.swing.JButton botLimpar;
    private javax.swing.JButton botNovo;
    private javax.swing.JButton botSalvar;
    private javax.swing.JComboBox cmbUFCidade;
    private javax.swing.JLabel lblDescCargo;
    private javax.swing.JLabel lblIdCargo;
    private javax.swing.JLabel lblNomeCargo;
    private javax.swing.JLabel lblPesquisa;
    private javax.swing.JPanel panCadastro;
    private javax.swing.JPanel panConsulta;
    private javax.swing.JScrollPane panTabela;
    private javax.swing.JTabbedPane pangCidade;
    private javax.swing.JTable tblCidade;
    private javax.swing.JTextField txtNomeCidade;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JTextField txtidcidade;
    // End of variables declaration//GEN-END:variables

    private void limparCampos() {
        txtNomeCidade.setText("");
        cmbUFCidade.setSelectedIndex(0);
    }

    private void limparTabela() {
        int tamanho = modelo.getRowCount();
            for (int i = 0; i < tamanho; i++){
                    modelo.removeRow(0);
            }
    }
}
